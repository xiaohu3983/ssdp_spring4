AOP
  面向切面编程，相对于OOP面向对于编程
Spring的AOP的存在是为了解耦，AOP可以让一组类共享相同的行为。在OOP中只能通过继承和实现接口，来使代码的耦合度增强，且继承只能为单继承，阻碍
更多行为添加到一组类上，AOP弥足了OOP的不足
Spring 支持AspectJ注解式切面编程
1、使用@AspectJ申明一个切面
2、使用@After、@Before、@Around定义建言（advice），可以直接拦截规则（切点）
